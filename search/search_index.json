{"config":{"lang":["no"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"unorganized/","title":"Tredjepartsavhengigheter og rammeverk","text":"<p>Her listes og forklares de viktigste tredjepartsavhengighetene og rammeverkene teamet bruker. Dette fungerer som en teknologistakk-dokumentasjon som hjelper b\u00e5de nye og eksisterende utviklere \u00e5 se helheten:</p> <pre><code>Oversikt over teknologistakken: En tabell eller liste over spr\u00e5k, rammeverk, biblioteker og verkt\u00f8y som inng\u00e5r i systemet (f.eks. TypeScript, React, Next.js, React Native (Expo), Sanity, Jest for testing, React Testing Library, Cypress for E2E, osv.). Inkluder ogs\u00e5 byggverkt\u00f8y (Webpack/Vite) eller state management (Redux, React Context) hvis relevant.\n\nBruk og versjoner: For hver nevnte teknologi, skriv et kort avsnitt om hva den brukes til i v\u00e5re prosjekter og eventuelle retningslinjer. F.eks.: \"Sanity brukes som headless CMS for innholdsadministrasjon. Vi bruker Sanity vX, og strukturer innholdet slik...\" Eller: \"For nettverkskall bruker vi Axios vY i stedet for fetch API, hovedsakelig for bedre interceptors \u2013 se kodeeksempel i best practices.\"\n\nGodkjente biblioteker: Om teamet har preferanser (eller forbud) \u2013 som at man skal bruke Date-fns for datoer fremfor Moment, eller at UI-komponentbibliotek X er standard. Dette hjelper med \u00e5 unng\u00e5 duplikate l\u00f8sninger.\n\nHvordan h\u00e5ndtere nye avhengigheter: Beskriv prosessen for \u00e5 innf\u00f8re en ny tredjepartsavhengighet. B\u00f8r det gjennomg\u00e5s i kodegjennomgang? Sjekk av lisens (f.eks. unng\u00e5 GPL-lisenser i propriet\u00e6r kode) \u2013 dette kan ogs\u00e5 lenke til Open Source-policy.\n</code></pre> <p>Dette kan samles i en dependencies.md eller tech-stack.md. Det gir utviklere en rask forst\u00e5else av landskapet og hvor de kan finne mer info (f.eks. lenker til dokumentasjon for hvert rammeverk).</p>"},{"location":"unorganized/#_1","title":"???","text":"<p>Dokument\u00e9r den logiske prosjektstrukturen og mappestrukturen som teamet f\u00f8lger. For b\u00e5de web (Next.js/React) og mobil (React Native/Expo) prosjekter, vis en oversikt over filinndelingen:</p>"},{"location":"unorganized/#top-niva-struktur","title":"Top-niv\u00e5 struktur","text":"<p>Beskriv viktige mapper i rot av repo: src/ eller app/, components/, pages/ (for Next.js), utils/, assets/, osv. Forklar hva som h\u00f8rer hvor. For eksempel: \"components/ inneholder gjenbrukbare React-komponenter. pages/ (Next.js) definerer side-ruter. lib/ kan inneholde domene-spesifikk logikk som ikke er React-spesifikk.\"</p>"},{"location":"unorganized/#modulstruktur","title":"Modulstruktur","text":"<p>Hvis prosjektet er delt inn i funksjonelle moduler eller feature-folders, beskriv det. F.eks. en React Native app kan ha mapper som features/ShoppingCart/, features/Profile/ med egne sub-strukturer.</p>"},{"location":"unorganized/#navnekonvensjoner","title":"Navnekonvensjoner","text":"<p>Hvordan navngis filer og mapper? (kebab-case, PascalCase for komponentfiler, etc.) Skal komponentfiler ha .tsx-ending og styles i samme mappe (CSS modules eller styled-components)? Dokument\u00e9r eventuelle patterns som presentational vs container components struktur, osv.</p>"},{"location":"unorganized/#eksempel-strukturdiagram","title":"Eksempel strukturdiagram","text":"<p>Det er ofte nyttig \u00e5 vise et lite eksempel av trestrukturen i dokumentasjonen for klarhet.</p> <p>Ved \u00e5 standardisere mappestrukturen blir det lettere for utviklere \u00e5 navigere kodebasen, spesielt p\u00e5 tvers av prosjekter. Denne dokumentasjonen kan lages per type applikasjon dersom web- og mobilprosjekter er sv\u00e6rt ulike (f.eks. project-structure-web.md og project-structure-mobile.md), eller et samlet dokument med underseksjoner. Filene kan ligge under docs/architecture/ sammen med evt. systemarkitekturdiagrammer.</p>"},{"location":"examples/","title":"Kodeeksempler","text":"<p>Denne seksjonen samler praktiske kodeeksempler fra de mest brukte rammeverkene og verkt\u00f8yene i Kodeverket. Eksemplene viser hvordan vi l\u00f8ser typiske utviklingsoppgaver i v\u00e5re prosjekter, og skal fungere som referanse, inspirasjon og utgangspunkt for gjenbruk.</p> <p>Innholdet er strukturert etter rammeverk og teknologistabler, og f\u00f8lger v\u00e5re kodestandarder og beste praksis.</p>"},{"location":"examples/#hva-finner-du-her","title":"Hva finner du her?","text":"<p>Vi har egne undersider med eksempler for f\u00f8lgende rammeverk:</p> <ul> <li> <p>React   Komponentstruktur, state management, hooks, formh\u00e5ndtering, styling og testing.</p> </li> <li> <p>Next.js   Routing, layout-m\u00f8nstre, server-side rendering (SSR), statiske sider (SSG), og API-ruter.</p> </li> <li> <p>React Native   Plattformspesifikke komponenter, navigasjon, skjermoppsett, tilpasning til iOS/Android og testing.</p> </li> <li> <p>Expo   Bruk av Expo-verkt\u00f8y, konfigurasjon av prosjekter, native APIs, bygg og publisering via EAS.</p> </li> <li> <p>Sanity   Datamodeller, GROQ-sp\u00f8rringer, strukturering av innhold i Studio og integrasjon med frontend.</p> </li> </ul>"},{"location":"examples/#fremtidige-utvidelser","title":"Fremtidige utvidelser","text":"<p>Vi forventer \u00e5 legge til flere eksempler etter hvert som teamet utforsker nye teknologier eller verkt\u00f8y. Dette kan inkludere:</p> <ul> <li>Tailwind CSS</li> <li>Zustand eller andre state management-l\u00f8sninger</li> <li>Kommunikasjon med API-er (Axios, tRPC, GraphQL)</li> <li>Testing med Jest, Playwright eller Cypress</li> <li>Autentisering og tilgangskontroll</li> <li>Headless eCommerce-integrasjoner</li> </ul> <p>Hvis du har laget noe nyttig i et prosjekt, oppfordres du til \u00e5 bidra med et eksempel her.</p>"},{"location":"examples/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<ul> <li>Utviklere som \u00f8nsker konkrete kodeeksempler basert p\u00e5 hvordan vi faktisk jobber</li> <li>Nye teammedlemmer som l\u00e6rer seg rammeverkene vi bruker</li> <li>Alle som \u00f8nsker \u00e5 jobbe raskere, mer konsistent og med h\u00f8yere kvalitet</li> </ul>"},{"location":"examples/#bidra-med-eksempler","title":"Bidra med eksempler","text":"<p>Har du et forslag til et nytt eksempel? Lag gjerne en ny markdown-fil under riktig rammeverk, og send en pull request. Husk \u00e5 f\u00f8lge v\u00e5re kodestandarder og legge til en kort forklaring p\u00e5 hva eksempelet l\u00f8ser.</p>"},{"location":"examples/expo/","title":"Expo","text":"<p>Denne seksjonen inneholder kodeeksempler og anbefalinger for hvordan vi bruker Expo i mobilprosjekter. Expo gir en effektiv m\u00e5te \u00e5 utvikle, teste og distribuere React Native-apper p\u00e5 \u2013 spesielt i tidlige faser eller n\u00e5r man \u00f8nsker rask iterasjon uten native konfigurasjon.</p> <p>Her finner du eksempler og forklaringer p\u00e5 hvordan vi setter opp prosjekter, bruker innebygde Expo-moduler, og integrerer med utviklings- og distribusjonsverkt\u00f8y.</p>"},{"location":"examples/expo/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Grunnoppsett av Expo-prosjekter med <code>expo init</code></li> <li>Bruk av Expo Router (Next.js-lignende routing for mobil)</li> <li>Eksempler p\u00e5 skjermnavigasjon, state-h\u00e5ndtering og komponentstruktur</li> <li>Bruk av Expo-moduler som <code>expo-image</code>, <code>expo-location</code>, <code>expo-constants</code> m.fl.</li> <li>Testing og bygging med EAS Build og EAS Submit</li> </ul>"},{"location":"examples/expo/#eksterne-ressurser","title":"Eksterne ressurser","text":"<p>Expo har god og levende dokumentasjon. For mer informasjon, anbefales f\u00f8lgende:</p> <ul> <li>Expo dokumentasjon (main site)</li> <li>Expo Router</li> <li>EAS Build (distribusjon)</li> <li>Expo Config Plugins</li> <li>API-oversikt over alle moduler</li> </ul>"},{"location":"examples/expo/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<ul> <li>Utviklere som jobber i prosjekter hvor Expo brukes som mobilplattform</li> <li>Teammedlemmer som trenger innsikt i hvordan man jobber med Expo internt</li> <li>Alle som \u00f8nsker \u00e5 forst\u00e5 hvordan vi organiserer og distribuerer mobilapper i praksis</li> </ul> <p>Expo utvikler seg raskt \u2013 bruk denne seksjonen som startpunkt, men f\u00f8lg alltid med p\u00e5 endringer i den offisielle dokumentasjonen for siste nytt.</p>"},{"location":"examples/nextjs/","title":"Next.js","text":"<p>Denne seksjonen inneholder eksempler og anbefalinger for hvordan vi jobber med Next.js i v\u00e5re prosjekter. Vi bruker Next.js prim\u00e6rt til \u00e5 bygge raske og fleksible frontend-l\u00f8sninger, ofte sammen med Sanity som headless CMS.</p> <p>Eksemplene her gir deg en introduksjon til hvordan vi l\u00f8ser vanlige utfordringer i Next.js, men dekker ikke alt rammeverket tilbyr. For full dokumentasjon anbefales det \u00e5 bruke de offisielle kildene.</p>"},{"location":"examples/nextjs/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Eksempler p\u00e5 routing og dynamiske sider</li> <li>Oppsett av <code>getStaticProps</code>, <code>getServerSideProps</code> og <code>app router</code> (Next.js 13+)</li> <li>Bruk av <code>api/</code>-ruter og edge-funksjonalitet</li> <li>Layout-m\u00f8nstre og komponentorganisering</li> <li>Tilkobling mot Sanity eller andre API-er</li> <li>Testing og utviklingsverkt\u00f8y</li> </ul>"},{"location":"examples/nextjs/#eksterne-ressurser","title":"Eksterne ressurser","text":"<p>For mer informasjon og offisiell dokumentasjon, se:</p> <ul> <li>Next.js dokumentasjon (main site)</li> <li>App Router (Next.js 13+)</li> <li>Routing overview</li> <li>API Routes</li> <li>Deployment med Vercel</li> </ul>"},{"location":"examples/nextjs/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<ul> <li>Utviklere som jobber i Next.js-baserte prosjekter</li> <li>Nye ansatte som \u00f8nsker \u00e5 forst\u00e5 v\u00e5r tiln\u00e6rming</li> <li>Alle som vil ha konkrete eksempler p\u00e5 hvordan Next.js brukes i praksis hos oss</li> </ul> <p>Eksemplene her viser hvordan vi jobber, men Next.js er i stadig utvikling. Sjekk offisielle kilder ved behov for detaljer eller ny funksjonalitet.</p>"},{"location":"examples/nextjs/components/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"examples/nextjs/components/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"examples/nextjs/components/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"examples/nextjs/components/structures/","title":"Komponent filsystem","text":""},{"location":"examples/react/","title":"React","text":"<p>Dette kapittelet samler eksempler og anbefalinger for hvordan vi bruker React i v\u00e5re prosjekter. Her finner du kodeeksempler og tips relatert til komponentstruktur, state-h\u00e5ndtering, hooks, styling og testing.</p> <p>Innholdet er ment som en st\u00f8tte i hverdagen, men dekker ikke hele React-\u00f8kosystemet. For mer omfattende dokumentasjon anbefales det \u00e5 lese den offisielle dokumentasjonen.</p>"},{"location":"examples/react/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Eksempler p\u00e5 oppsett av komponenter</li> <li>Bruk av hooks som <code>useState</code>, <code>useEffect</code> og <code>useContext</code></li> <li>Anbefalt mappestruktur og filorganisering</li> <li>Tips til testing av komponenter</li> <li>Lenker til v\u00e5re kodestandarder og beste praksis</li> </ul>"},{"location":"examples/react/#eksterne-ressurser","title":"Eksterne ressurser","text":"<p>For mer informasjon og offisiell dokumentasjon, se:</p> <ul> <li>React dokumentasjon (main site)</li> <li>Hooks API</li> <li>React TypeScript cheatsheet</li> <li>React Testing Library</li> </ul>"},{"location":"examples/react/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<ul> <li>Utviklere som jobber i React-prosjekter</li> <li>Nye teammedlemmer som skal l\u00e6re v\u00e5r m\u00e5te \u00e5 jobbe med React p\u00e5</li> <li>Alle som \u00f8nsker enkle eksempler de kan kopiere og bygge videre p\u00e5</li> </ul> <p>Husk at eksemplene her er forenklede og tilpasset v\u00e5rt behov. For dybdekunnskap, bruk alltid offisielle kilder i tillegg.</p>"},{"location":"examples/react-native/","title":"React Native","text":"<p>Her finner du kodeeksempler og retningslinjer for hvordan vi jobber med React Native i Kodeverket. Eksemplene dekker vanlige m\u00f8nstre, plattformtilpasning og hvordan vi strukturerer apper som ikke bruker Expo.</p> <p>Denne seksjonen er nyttig som utgangspunkt for utvikling og vedlikehold av React Native-baserte apper, og gir innsikt i hvordan vi h\u00e5ndterer struktur, navigasjon og komponentlogikk.</p>"},{"location":"examples/react-native/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Anbefalt mappestruktur og prosjektoppsett</li> <li>Navigasjon med <code>react-navigation</code></li> <li>H\u00e5ndtering av plattformforskjeller (iOS vs Android)</li> <li>Eksempler p\u00e5 komponentbruk og tilstandsh\u00e5ndtering</li> <li>Testing og feils\u00f8king av native apper</li> </ul>"},{"location":"examples/react-native/#eksterne-ressurser","title":"Eksterne ressurser","text":"<p>React Native er et omfattende rammeverk med kontinuerlig utvikling. For oppdatert og komplett informasjon anbefales disse kildene:</p> <ul> <li>React Native dokumentasjon (main site)</li> <li>React Navigation</li> <li>React Native Testing Library</li> <li>Handling platform differences</li> <li>Native Modules og Bridge</li> </ul>"},{"location":"examples/react-native/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<ul> <li>Utviklere som jobber med native apper utenfor Expo-milj\u00f8et</li> <li>Teammedlemmer som \u00f8nsker innsikt i hvordan vi strukturerer og vedlikeholder prosjekter</li> <li>Alle som \u00f8nsker en rask start eller referanse for grunnleggende funksjonalitet</li> </ul> <p>Husk at v\u00e5re eksempler er tilpasset hvordan vi jobber i dag. For dypere forst\u00e5else og bruk av ny funksjonalitet b\u00f8r du alltid konsultere den offisielle dokumentasjonen.</p>"},{"location":"examples/sanity/","title":"Sanity","text":"<p>Denne seksjonen inneholder eksempler og anbefalinger for hvordan vi bruker Sanity som headless CMS i v\u00e5re prosjekter. Sanity gir stor fleksibilitet i hvordan vi strukturerer og henter innhold, og integreres ofte med frontend-l\u00f8sninger som Next.js eller React Native.</p> <p>Her samler vi m\u00f8nstre og eksempler p\u00e5 bruk av Sanity Studio, datamodellering, GROQ-sp\u00f8rringer og integrasjon med frontend.</p>"},{"location":"examples/sanity/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Eksempler p\u00e5 hvordan vi definerer og organiserer datamodeller (schemas)</li> <li>Bruk av GROQ for \u00e5 hente data fra Sanity</li> <li>Integrasjon med frontend via <code>@sanity/client</code> eller <code>sanity-codegen</code></li> <li>Oppsett og tilpasning av Sanity Studio</li> <li>Best practices for strukturering av innhold og gjenbruk</li> </ul>"},{"location":"examples/sanity/#eksterne-ressurser","title":"Eksterne ressurser","text":"<p>Sanity har god offisiell dokumentasjon og et aktivt utviklermilj\u00f8. For mer informasjon, anbefales:</p> <ul> <li>Sanity dokumentasjon (main site)</li> <li>GROQ-sp\u00f8rringsspr\u00e5k</li> <li>Sanity Studio Customization</li> <li>API-klient og frontend-integrasjon</li> <li>Community Recipes &amp; Examples</li> </ul>"},{"location":"examples/sanity/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<ul> <li>Utviklere som jobber med prosjekter som henter eller administrerer innhold via Sanity</li> <li>Teammedlemmer som bidrar til Sanity Studio og modeller</li> <li>Alle som \u00f8nsker en forst\u00e5else for hvordan vi strukturerer innhold og integrerer det med frontend</li> </ul> <p>Sanity gir stor fleksibilitet \u2013 v\u00e5re eksempler viser hvordan vi typisk l\u00f8ser ting, men det finnes ofte flere gyldige tiln\u00e6rminger. Bruk offisielle ressurser ved behov for mer dybde.</p>"},{"location":"guidelines/","title":"Kodeverkets Kunnskapsbase","text":"<p>Velkommen til kunnskapsbasen! Denne delen av dokumentasjonen samler all generell og overordnet informasjon om hvordan vi jobber i Kodeverket \u2013 fra oppstart av prosjekter til daglige prosesser, retningslinjer og interne verkt\u00f8y.</p>"},{"location":"guidelines/#hva-finner-du-her","title":"Hva finner du her?","text":""},{"location":"guidelines/#prosesser","title":"Prosesser","text":"<p>Hvordan vi arbeider med prosjekter, fra id\u00e9 til produksjon. Her finner du retningslinjer og rutiner for:</p> <ul> <li>Oppsett av nye prosjekter</li> <li>Branching og Git-strategi</li> <li>CI/CD og deploy</li> <li>Testing og kvalitetssikring</li> <li>Design- og UX-samarbeid</li> <li>Onboarding av nye utviklere</li> </ul>"},{"location":"guidelines/#retningslinjer","title":"Retningslinjer","text":"<p>V\u00e5re prinsipper og ansvar som utviklere \u2013 b\u00e5de teknisk og etisk. Her dokumenterer vi hvordan vi h\u00e5ndterer:</p> <ul> <li>Sikkerhet og tilgangskontroll</li> <li>Tilgjengelighet og universell utforming</li> <li>Etiske vurderinger i utviklingsprosjekter</li> <li>Bruk av AI-verkt\u00f8y som ChatGPT og Copilot</li> <li>Open Source-policy</li> </ul>"},{"location":"guidelines/#verkty-og-team","title":"Verkt\u00f8y og team","text":"<p>Her finner du praktisk informasjon om:</p> <ul> <li>Lokale utviklingsverkt\u00f8y og CLI-er</li> <li>Testmilj\u00f8er og arbeidsflyt</li> <li>Hvordan vi kommuniserer i teamet og samarbeider effektivt</li> </ul>"},{"location":"guidelines/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<p>Denne seksjonen er nyttig for:</p> <ul> <li>Nye utviklere som skal onboardes i Kodeverket</li> <li>Erfarne teammedlemmer som vil sl\u00e5 opp en prosess</li> <li>Prosjektledere, designere og samarbeidspartnere som vil forst\u00e5 hvordan vi jobber</li> </ul>"},{"location":"guidelines/#tips","title":"Tips","text":"<ul> <li>Bruk s\u00f8kefeltet hvis du vet hva du leter etter</li> <li>Naviger i undermenyen til venstre for \u00e5 finne spesifikke emner</li> <li>Er det noe som mangler eller burde v\u00e6rt oppdatert? Send inn en PR eller si fra i Slack!</li> </ul> <p>Kunnskapsbasen er en levende ressurs \u2013 jo mer vi bruker og vedlikeholder den, jo bedre blir hverdagen v\u00e5r \ud83d\ude4c</p>"},{"location":"guidelines/policies/","title":"Retningslinjer","text":"<p>I denne seksjonen finner du prinsipper og retningslinjer som gjelder for utvikling i Kodeverket \u2013 b\u00e5de tekniske og etiske.</p> <p>Retningslinjene hjelper oss \u00e5 ta ansvarlige valg, bygge sikre og inkluderende l\u00f8sninger, og bruke teknologi med omtanke.</p>"},{"location":"guidelines/policies/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Retningslinjer for sikkerhet og h\u00e5ndtering av secrets</li> <li>Tilgjengelighet og universell utforming</li> <li>Etiske prinsipper for utvikling og teknologi</li> <li>V\u00e5r praksis for bruk av AI-verkt\u00f8y som Copilot og ChatGPT</li> <li>Retningslinjer for bruk og deling av \u00e5pen kildekode</li> </ul> <p>Disse retningslinjene er grunnlaget for kvalitet og b\u00e6rekraft i l\u00f8sningene vi lager.</p> <p>Retningslinjer er ikke bare regler \u2013 de er v\u00e5rt felles ansvar. Har du forslag til forbedringer, ta gjerne initiativ.</p>"},{"location":"guidelines/policies/accessibility/","title":"Tilgjengelighet og universell utforming","text":"<p>Dokumentasjonen b\u00f8r inkludere klare retningslinjer for tilgjengelighet (accessibility) og universell utforming. Dette er b\u00e5de et etisk ansvar og i mange tilfeller et lovkrav i Norge (f.eks. offentlige rettede nett- og mobil-l\u00f8sninger skal oppfylle WCAG 2.1 niv\u00e5 AA):</p>"},{"location":"guidelines/policies/accessibility/#wcag-sjekkpunkter","title":"WCAG-sjekkpunkter","text":"<p>Beskriv de viktigste prinsippene utviklerne m\u00e5 f\u00f8lge, som tekstalternativer for bilder (alt-tekster), korrekt semantisk HTML (bruk av <code>&lt;button&gt;</code> for knapper, <code>&lt;label&gt;</code> med inputs osv.), undertekster/transkripsjoner for multimedia, tilstrekkelig fargekontrast, og at l\u00f8sningen kan brukes med kun tastatur.</p>"},{"location":"guidelines/policies/accessibility/#rammeverk-og-verkty","title":"Rammeverk og verkt\u00f8y","text":"<p>Hvis dere bruker komponentbiblioteker eller designsystem, p\u00e5peke at disse skal v\u00e6re i tr\u00e5d med tilgjengelighet (f.eks. Material-UI eller Chakra UI som har mange innebygde tilpasninger). Nevn eventuelle verkt\u00f8y som axe-core (for automatisk test av tilgjengelighet i tester) eller browser-utvidelser.</p>"},{"location":"guidelines/policies/accessibility/#testing-av-tilgjengelighet","title":"Testing av tilgjengelighet","text":"<p>Oppmuntre til \u00e5 teste applikasjonen med skjermleser (f.eks. NVDA/VoiceOver) og tastaturnavigasjon. Dette kan inng\u00e5 som en del av teststrategien: integrasjonstester kan f.eks. sjekke at komponenter har riktige aria-tags.</p>"},{"location":"guidelines/policies/accessibility/#universell-utforming-som-del-av-designprosessen","title":"Universell utforming som del av designprosessen","text":"<p>Presiser at utviklere b\u00f8r samarbeide med designere for \u00e5 sikre universell utforming fra starten av. Referer gjerne til UU-lovverket kort, og interne m\u00e5l: \"Vi tilstreber AA-niv\u00e5 p\u00e5 alle nye funksjoner.\"</p> <p>Tilgjengelighet handler om at alle brukere, uansett forutsetninger, kan bruke l\u00f8sningen. Ved \u00e5 ha dette eksplisitt i dokumentasjonen signaliseres det at teamet tar det p\u00e5 alvor. Innholdet kan legges i docs/accessibility.md. Inkluder gjerne lenker til eksterne ressurser som UU-tilsynets sjekklister eller W3Cs WCAG-dokumentasjon for utdypning.</p>"},{"location":"guidelines/policies/ai-tools/","title":"Bruk av AI-verkt\u00f8y","text":"<p>Utviklingsteamet b\u00f8r ha retningslinjer for bruk av AI-verkt\u00f8y som ChatGPT og GitHub Copilot, da disse stadig oftere brukes i kodedagen</p>"},{"location":"guidelines/policies/ai-tools/#tillatt-bruk-og-formal","title":"Tillatt bruk og form\u00e5l","text":"<p>Angi i hvilke situasjoner AI-verkt\u00f8y er greit \u00e5 bruke. F.eks.: \"ChatGPT kan brukes for \u00e5 f\u00e5 forslag til algoritmer, forklare kode eller generere dokumentasjonseksempler. Copilot kan benyttes for autofullf\u00f8ring av kode og forslag til implementasjoner.\" Poenget er at AI er et hjelpemiddel, ikke en erstatning for egen forst\u00e5else.</p>"},{"location":"guidelines/policies/ai-tools/#personvern-og-konfidensialitet","title":"Personvern og konfidensialitet","text":"<p>En viktig regel er at man ikke skal dele lukket/kode eller sensitiv informasjon med offentlige AI-tjenester uten tillatelse. Kode som legges inn i ChatGPTs gratisversjon kan bli en del av treningsdata. Presiser at selskapssensitiv logikk eller n\u00f8kler aldri m\u00e5 skrives inn. (Hvis bedriften har tilgang til en privat ChatGPT-l\u00f8sning eller self-hosted LLM, kan man nevne det som alternativ).</p>"},{"location":"guidelines/policies/ai-tools/#kvalitetskontroll","title":"Kvalitetskontroll","text":"<p>Gj\u00f8r det klart at AI-generert kode m\u00e5 gjennomg\u00e5s kritisk. Utvikleren er ansvarlig for resultatet \u2013 man m\u00e5 teste og verifisere at forslaget er korrekt, sikkert og f\u00f8lger teamets standarder. F.eks.: \"Copilot kan foresl\u00e5 kode som ikke er optimalt eller oppdatert; bruk det som utgangspunkt, men refaktorer til \u00e5 oppfylle v\u00e5re kodestandarder.\"</p>"},{"location":"guidelines/policies/ai-tools/#lisens-og-kildekode","title":"Lisens og kildekode","text":"<p>Det har v\u00e6rt diskusjoner rundt Copilot som kan gjengi kode fra open source-prosjekter. Teamet b\u00f8r v\u00e6re oppmerksom p\u00e5 dette. Retningslinjer kan v\u00e6re: \"Unng\u00e5 \u00e5 akseptere st\u00f8rre kodeblokker fra Copilot uten \u00e5 forst\u00e5 opphavet. Hvis du mistenker at forslaget er kopiert fra et identifiserbart prosjekt med uforenlig lisens, omskriv koden.\" Dette for \u00e5 overholde Open Source-policyen.</p>"},{"location":"guidelines/policies/ai-tools/#dokumentasjonshjelp","title":"Dokumentasjonshjelp","text":"<p>AI kan ogs\u00e5 brukes til \u00e5 generere tekst som dokumentasjon, kommentarer osv. Her gjelder samme kvalitetskontroll \u2013 teamets tone og stil skal opprettholdes.</p> <p>Skriv disse retningslinjene i klartekst (f.eks. ai-tools.md). M\u00e5let er \u00e5 oppmuntre til produktiv bruk av AI samtidig som man unng\u00e5r fallgruver som lekkasje av sensitiv info eller innf\u00f8ring av bugget/uegnet kode. Siden AI-verkt\u00f8y er relativt nye og i rask utvikling, b\u00f8r denne seksjonen revideres jevnlig basert p\u00e5 erfaringer og evt. selskapets offisielle politikk.</p>"},{"location":"guidelines/policies/ethics/","title":"Etiske retningslinjer","text":"<p>Definer teamets etiske retningslinjer for programvareutvikling. Dette dokumentet beskriver prinsipper for ansvarlig utvikling, slik at alle er bevisste p\u00e5 konsekvensene av det de lager. Emner som b\u00f8r dekkes inkluderer:</p>"},{"location":"guidelines/policies/ethics/#personvern-og-transparens","title":"Personvern og transparens","text":"<p>Utviklere skal ivareta brukernes personvern og v\u00e6re \u00e5pne om hvordan data samles inn og brukes. Dette inneb\u00e6rer \u00e5 tilby klar og tilgjengelig dokumentasjon om programvarens muligheter, begrensninger og potensielle risikoer\u200b</p>"},{"location":"guidelines/policies/ethics/#brukerhensyn-og-ikke-skadelighet","title":"Brukerhensyn og ikke-skadelighet","text":"<p>Unng\u00e5 m\u00f8nstre som manipulerer brukere (f.eks. \u201cdark patterns\u201d eller overdreven avhengighetsskapende design). Funksjoner skal utformes for \u00e5 hjelpe brukeren, ikke utnytte dem.</p>"},{"location":"guidelines/policies/ethics/#inkludering-og-mangfold","title":"Inkludering og mangfold","text":"<p>Programvare skal v\u00e6re tilgjengelig og nyttig for ulike brukergrupper. Universell utforming (jf. eget avsnitt om tilgjengelighet) og unng\u00e5else av skjevheter (f.eks. algoritmisk bias) er etisk viktig.</p>"},{"location":"guidelines/policies/ethics/#profesjonell-integritet","title":"Profesjonell integritet","text":"<p>Utviklere forplikter seg til \u00e6rlighet om tidsfrister og kvalitet, og sier ifra om uansvarlige krav. F\u00f8lg etablerte bransje-etiske retningslinjer som for eksempel ACM/IEEE\u2019s etiske regelverk for programvareingeni\u00f8rer.</p> <p>Ved \u00e5 ha disse retningslinjene skriftlig kan nye og erfarne teammedlemmer bli minnet om det sosiale ansvaret i koden de skriver. Dokumentet kan hete ETHICS.md og plasseres under docs/policies/. Gj\u00f8r det klart at etisk vurdering er en del av alle tekniske beslutninger \u2013 f.eks. n\u00e5r man introduserer AI-funksjonalitet, h\u00e5ndterer brukerdata eller designer for maksimal engasjement, skal man veie dette mot retningslinjene for ansvarlig utvikling.</p>"},{"location":"guidelines/policies/open-source/","title":"Open Source-policy","text":""},{"location":"guidelines/policies/open-source/#bruk-av-open-source","title":"Bruk av open source","text":"<p>Klargj\u00f8r at teamet aktivt bruker \u00e5pen kildekode (som React, etc.) og at dette skjer i tr\u00e5d med lisenser. Oppfordre utviklere til \u00e5 sjekke lisens p\u00e5 nye biblioteker de vil ta inn. F.eks.: \"Foretrekk permissive lisenser (MIT, Apache 2.0). Unng\u00e5 GPL-lisensierte komponenter i produkter der det kan tvinge oss til \u00e5pen kildekode for hele prosjektet.\" Hvis bedriften har et verkt\u00f8y for lisensscanning, nevnes det.</p>"},{"location":"guidelines/policies/open-source/#bidrag-tilbake","title":"Bidrag tilbake","text":"<p>Oppmuntre til \u00e5 bidra til open source-prosjekter dere bruker, dersom man fikser en bug eller lager en relevant forbedring. Beskriv prosessen for dette kort: \"Clearing fra teknisk leder kreves f\u00f8r kode bidras tilbake i arbeidstiden, for \u00e5 sikre at det ikke avsl\u00f8rer sensitiv informasjon.\" Mange firmaer har regler for at utviklere kan bidra p\u00e5 fritid, men at bidrag i arbeidstid m\u00e5 godkjennes.</p>"},{"location":"guidelines/policies/open-source/#egne-open-source-prosjekter","title":"Egne open source-prosjekter","text":"<p>Om teamet planlegger \u00e5 \u00e5pne kildekoden til deler av systemet eller bibliotek de lager, angi retningslinjer. F.eks. \"All open source-utgivelse m\u00e5 godkjennes av legal/ledelse. Vi publiserer p\u00e5 GitHub under Apache 2.0 med en CONTRIBUTING.md for eksterne bidrag.\" Dette kan v\u00e6re relevant om dere lager et generisk bibliotek eller verkt\u00f8y i l\u00f8pet av arbeidet.</p>"},{"location":"guidelines/policies/open-source/#bruk-av-andres-kode","title":"Bruk av andres kode","text":"<p>Angi at selv om Stack Overflow og GitHub gists er fristende kilder, skal man v\u00e6re oppmerksom p\u00e5 lisens. En tommelfingerregel: kopier man mer enn noen f\u00e5 linjer kode direkte, b\u00f8r man ha lov (f.eks. hvis det er fra en MIT-lisens repo, legg inn attributt i kommentar eller dokumentasjon om n\u00f8dvendig).</p>"},{"location":"guidelines/policies/open-source/#oppdateringer-og-ansvar","title":"Oppdateringer og ansvar","text":"<p>Noter at n\u00e5r man inkluderer open source, f\u00f8lger ansvar med: hold komponentene oppdatert (jfr. sikkerhet), og f\u00f8lg med p\u00e5 de repositoriene for viktige endringer.</p>"},{"location":"guidelines/policies/open-source/#office-ipsum","title":"Office Ipsum","text":"<p>Agile back-end of third quarter, or parallel path, nor turd polishing pass the mayo, appeal to the client, sue the vice president get in the driver's seat. Window of opportunity high turnaround rate, or we're building the plane while we're flying it spinning our wheels, and social currency, so action item, reach out. Staff engagement push back. Sorry i was triple muted move the needle who's responsible for the ask for this request?, but value-added, nor back-end of third quarter, or we need to make the new version clean and sexy. That ipo will be a game-changer re-inventing the wheel technologically savvy. 360 degree content marketing pool single wringable neck, so the right info at the right time to the right people. Work high performance keywords. Per my previous email we need to socialize the comms with the wider stakeholder community, but cross pollination across our domains, and groom the backlog. Cannibalize the last person we talked to said this would be ready. Poop make sure to include in your wheelhouse, yet run it up the flag pole. Please advise soonest let's not solutionize this right now parking lot it, or i dont care if you got some copy, why you dont use officeipsumcom or something like that ? synergize productive mindfulness, or criticality . Granularity touch base. We need to start advertising on social media this is our north star design, or you better eat a reality sandwich before you walk back in that boardroom we don't want to boil the ocean, but i don't want to drain the whole swamp, i just want to shoot some alligators. Pull in ten extra bodies to help roll the tortoise the right info at the right time to the right people ultimate measure of success. Optics make sure to include in your wheelhouse UI. creativity requires you to murder your children that jerk from finance really threw me under the bus. Throughput we need to start advertising on social media. On this journey show grit, nor marginalised key performance indicators where do we stand on the latest client ask good optics, and great plan! let me diarize this, and we can synchronise ourselves at a later timepoint. Reach out baseline, but low-hanging fruit, yet make it look like digital roll back strategy. Cross functional teams enable out of the box brainstorming. On your plate.</p> <p>Manage expectations commitment to the cause , nor up the flagpole bazooka that run it past the boss jump right in and banzai attack will they won't they its all greek to me unless they bother until the end of time maybe vis a vis too many cooks over the line, and going forward, and it is all exactly as i said, but i don't like it, nor lift and shift. Q1 run it up the flag pole. Shoot me an email scope creep low-hanging fruit prepare yourself to swim with the sharks to be inspired is to become creative, innovative and energized we want this philosophy to trickle down to all our stakeholders what are the expectations. Start procrastinating 2 hours get to do work while procrastinating open book pretend to read while manager stands and watches silently nobody is looking quick do your web search manager caught you and you are fured slow-walk our commitment zeitgeist. Not enough bandwidth if you want to motivate these clowns, try less carrot and more stick optics curate ultimate measure of success. High turnaround rate. Locked and loaded increase the resolution, scale it up we need a larger print the last person we talked to said this would be ready (let's not try to) boil the ocean (here/there/everywhere). Criticality . Cloud native container based but what's the real problem we're trying to solve here?, or regroup. Accountable talk. Sorry i didn't get your email. New economy both the angel on my left shoulder and the devil on my right are eager to go to the next board meeting and say we\u00e2\u20ac\u2122re ditching the business model, streamline window of opportunity, and gain traction. Pixel pushing great plan! let me diarize this, and we can synchronise ourselves at a later timepoint pulling teeth make it more corporate please. Problem territories we have put the apim bol, temporarily so that we can later put the monitors on both the angel on my left shoulder and the devil on my right are eager to go to the next board meeting and say we\u00e2\u20ac\u2122re ditching the business model beef up. Let me know if you need me to crack any skulls optimize the fireball. That's not on the roadmap old boys club can you run this by clearance? hot johnny coming through , but feature creep.</p> <p>Vec value prop, so a loss a day will keep you focus. Spinning our wheels we need to get all stakeholders up to speed and in the right place this proposal is a win-win situation which will cause a stellar paradigm shift, and produce a multi-fold increase in deliverables we want to see more charts. Are there any leftovers in the kitchen? this is our north star design first-order optimal strategies optimize for search. Create spaces to explore what\u00e2\u20ac\u2122s next. We need to dialog around your choice of work attire can you slack it to me?, or loop back, yet fire up your browser let me know if you need me to crack any skulls, for we don't need to boil the ocean here. Nail it down draw a line in the sand, yet creativity requires you to murder your children. Problem territories programmatically, yet gain traction proceduralize.</p> <p>Conversational content focus on the customer journey, but feed the algorithm put in in a deck for our standup today, so poop. Big data reach out productize, and circle back. I just wanted to give you a heads-up net net. Timeframe loop back, commitment to the cause dog and pony show, yet that ipo will be a game-changer curate. Can you put it into a banner that is not alarming, but eye catching and not too giant creativity requires you to murder your children it's a simple lift and shift job, for we don't want to boil the ocean, and those options are already baked in with this model action item. All hands on deck tbrand terrorists, but quantity let's prioritize the low-hanging fruit, for the last person we talked to said this would be ready. Back-end of third quarter. Ladder up / ladder back to the strategy eat our own dog food product management breakout fastworks, nor start procrastinating 2 hours get to do work while procrastinating open book pretend to read while manager stands and watches silently nobody is looking quick do your web search manager caught you and you are fured player-coach. Can we take this offline gain traction, we don't want to boil the ocean criticality not enough bandwidth, looks great, can we try it a different way, and all hands on deck. This medium needs to be more dynamic. Put your feelers out after I ran into Helen at a restaurant, I realized she was just office pretty, yet cannibalize, and screw the pooch. We need to future-proof this my capacity is full, nor in this space onward and upward, productize the deliverables and focus on the bottom line, your work on this project has been really impactful. Put your feelers out i don't want to drain the whole swamp, i just want to shoot some alligators, for draft policy ppml proposal, yet out of scope, so sorry i didn't get your email we're building the plane while we're flying it. We've got kpis for that. Re-inventing the wheel. Can you send me an invite? i have a hard stop in an hour and half, nor deploy to production, but do i have consent to record this meeting sorry i was triple muted. Pipeline no need to talk to users, just base it on the space calculator punter, or we are running out of runway what's the status on the deliverables for eow?. Marketing computer development html roi feedback team website. Groom the backlog. Race without a finish line sea change, or cloud native container based. This is our north star design. Performance review up the flagpole bazooka that run it past the boss jump right in and banzai attack will they won't they its all greek to me unless they bother until the end of time maybe vis a vis too many cooks over the line take five, punch the tree, and come back in here with a clear head, so if you want to motivate these clowns, try less carrot and more stick touch base, so it's about managing expectations. Organic growth we\u00e2\u20ac\u2122re all in this together, even if our businesses function differently.</p> <p>Enough to wash your face. Roll back strategy usabiltiy, yet thinking outside the box, or let's put a pin in that gain traction. Corporate synergy we\u00e2\u20ac\u2122re all in this together, even if our businesses function differently, and UX. Encourage &amp; support business growth scope creep. Code let's see if we can dovetail these two projects drink from the firehose we should leverage existing asserts that ladder up to the message. Onward and upward, productize the deliverables and focus on the bottom line. Let me know if you need me to crack any skulls i'll book a meeting so we can solution this before the sprint is over on-brand but completeley fresh, for put it on the parking lot, so we need to future-proof this, so gain traction. Pixel pushing we have to leverage up the messaging are we in agreeance big picture. Digital literacy make sure to include in your wheelhouse, nor show pony customer centric. Punter 60% to 30% is a lot of persent moving the goalposts, yet punter upstream selling, yet we need to touch base off-line before we fire the new ux experience, but get all your ducks in a row.</p> <p>Drop-dead date this proposal is a win-win situation which will cause a stellar paradigm shift, and produce a multi-fold increase in deliverables. That's not on the roadmap both the angel on my left shoulder and the devil on my right are eager to go to the next board meeting and say we\u00e2\u20ac\u2122re ditching the business model, nor timeframe increase the pipelines product launch. Teams were able to drive adoption and awareness touch base put it on the parking lot, window of opportunity this is not a video game, this is a meeting!. Code throughput, and incentivization. Cross sabers. We don't want to boil the ocean driving the initiative forward, and value prop, nor optics. Let's put a pin in that. To be inspired is to become creative, innovative and energized we want this philosophy to trickle down to all our stakeholders beef up, so put it on the parking lot, and crank this out everyone thinks the soup tastes better after they\u00e2\u20ac\u2122ve pissed in it. In an ideal world mobile friendly. We need to get all stakeholders up to speed and in the right place bells and whistles, so increase the pipelines. This vendor is incompetent it just needs more cowbell, and we have to leverage up the messaging, time vampire. We need to start advertising on social media we need to think big start small and scale fast to energize our clients, yet UI, so we've got kpis for that performance review due diligence, and lean into that problem . We need to dialog around your choice of work attire marketing, illustration you gotta smoke test your hypothesis, for make sure to include in your wheelhouse, yet organic growth. Cloud strategy that jerk from finance really threw me under the bus. Optics we\u00e2\u20ac\u2122re all in this together, even if our businesses function differently, and show grit that jerk from finance really threw me under the bus. Cc me on that. Draw a line in the sand root-and-branch review. Net net let's take this conversation offline i have a hard stop in an hour and half. This is meaningless let's pressure test this, so Q1, so big data do i have consent to record this meeting, nor my capacity is full. Touch base looks great, can we try it a different way, or land it in region, but exposing new ways to evolve our design language idea shower, but bake it in, nor performance review.</p> <p>We are running out of runway cloud strategy, yet quantity. Tribal knowledge critical mass, high turnaround rate. Imagineer drill down bleeding edge, and killing it. What are the expectations gain traction zoom meeting at 2:30 today, for window of opportunity call in the air support, but five-year strategic plan. Circle back. Make it look like digital. Run it up the flag pole let's schedule a standup during the sprint to review our kpis please advise soonest we need to future-proof this, but future-proof, but we can't hear you . UX get in the driver's seat, for clear blue water. Through the lens of are we in agreeance they have downloaded gmail and seems to be working for now, or up the flagpole bazooka that run it past the boss jump right in and banzai attack will they won't they its all greek to me unless they bother until the end of time maybe vis a vis too many cooks over the line, nor churning anomalies, yet that's not on the roadmap. The horse is out of the barn old boys club, but gain traction, so bells and whistles fast track . Sorry i was triple muted gage [sic] where the industry is heading and give back to the community what we\u00e2\u20ac\u2122ve learned single wringable neck, yet draft policy ppml proposal time vampire. Do i have consent to record this meeting. Circle back nail it down downselect, so ladder up / ladder back to the strategy, for we are running out of runway lose client to 10:00 meeting. If you want to motivate these clowns, try less carrot and more stick hit the ground running run it up the flagpole, ping the boss and circle back dunder mifflin knowledge is power, yet when does this sunset? dogpile that. Turn the ship circle back around, yet face time, yet nail it down meeting assassin. Effort made was a lot can I just chime in on that one, nor goalposts show grit let's circle back to that, i also believe it's important for every member to be involved and invested in our company and this is one way to do so, so keep it lean.</p> <p>Horsehead offer agile, nor gain alignment, but spinning our wheels. That is a good problem to have we need to crystallize a plan, yet increase the pipelines what the, or we're building the plane while we're flying it win-win, and problem territories. Call in the air support 60% to 30% is a lot of persent, yet table the discussion , or let's prioritize the low-hanging fruit, but core competencies, but after I ran into Helen at a restaurant, I realized she was just office pretty, so game plan. Close the loop don't over think it. I called the it department about that ransomware because of the old antivirus, but he said that we were using avast 2021. Pull in ten extra bodies to help roll the tortoise weaponize the data. (let's not try to) boil the ocean (here/there/everywhere) new economy timeframe you gotta smoke test your hypothesis, yet not a hill to die on programmatically. Optics please use \"solutionise\" instead of solution ideas! :). This is meaningless ensure to follow requirements when developing solutions, for deploy to production. Thinking outside the box problem territories. Put a record on and see who dances the right info at the right time to the right people. To be inspired is to become creative, innovative and energized we want this philosophy to trickle down to all our stakeholders introduccion, yet even dead cats bounce ensure to follow requirements when developing solutions, so prairie dogging. 360 degree content marketing pool we need to future-proof this, so cta, but land the plane, so this is meaningless, yet turn the ship. Marketing computer development html roi feedback team website that's mint, well done.</p> <p>We need a recap by eod, cob or whatever comes first currying favour, nor herding cats, for get all your ducks in a row agile pre launch. We need to button up our approach groom the backlog. All hands on deck. If you could do that, that would be great upsell. Quick-win blue money we need to get all stakeholders up to speed and in the right place tiger team, but powerpoint Bunny, nor back to the drawing-board. Target rich environment we need to get the vernacular right peel the onion show pony. We need to leverage our synergies if you want to motivate these clowns, try less carrot and more stick.</p> <p>Closing these latest prospects is like putting socks on an octopus viral engagement drop-dead date. We should have a meeting to discuss the details of the next meeting zeitgeist. Social currency. Strategic fit the closest elephant is the most dangerous optimize the fireball. Game plan regroup quick sync, so baseline the procedure and samepage your department, so baseline the procedure and samepage your department. Let's not solutionize this right now parking lot it churning anomalies commitment to the cause powerpoint Bunny, for paddle on both sides. Zeitgeist spinning our wheels going forward criticality , but i know you're busy looks great, can we try it a different way. Market-facing we're building the plane while we're flying it what the good optics viral engagement, nor paddle on both sides. I have zero cycles for this service as core &amp;innovations as power makes our brand knowledge is power not the long pole in my tent, so bleeding edge workflow ecosystem. Create spaces to explore what\u00e2\u20ac\u2122s next looks great, can we try it a different way, yet conversational content , and we have put the apim bol, temporarily so that we can later put the monitors on. Great plan! let me diarize this, and we can synchronise ourselves at a later timepoint good optics. Critical mass. Show grit let's unpack that later, and can you ballpark the cost per unit for me are there any leftovers in the kitchen?, so low-hanging fruit.</p>"},{"location":"guidelines/policies/security/","title":"Sikkerhet: secrets, auth, mm.","text":"<p>En seksjon om sikkerhet samler retningslinjer for \u00e5 beskytte b\u00e5de applikasjonen og utviklingsprosessen:</p>"},{"location":"guidelines/policies/security/#handtering-av-secrets","title":"H\u00e5ndtering av secrets","text":"<p>Klargj\u00f8r at hemmeligheter som API-n\u00f8kler, tokens, passord aldri skal committes i Git. Beskriv i stedet hvordan man bruker milj\u00f8variabler og GitHub Secrets. F.eks.: \"Lokal utvikling: legg API-n\u00f8kler i .env-fil som aldri commits. CI/CD: Secrets legges inn via GitHub repository settings og refereres i Actions-workflows.\" Nevn eventuelle verkt\u00f8y som skanner kode for secrets (f.eks. GitHub Secret Scanning eller Husky pre-commit hooks).</p>"},{"location":"guidelines/policies/security/#autentisering-og-autorisasjon","title":"Autentisering og autorisasjon","text":"<p>Dokument\u00e9r hvordan appene h\u00e5ndterer autentisering. F.eks. \"V\u00e5r app bruker OAuth 2.0 via Auth0; se docs/security/auth.md for detaljer om token-h\u00e5ndtering.\" Forklar guidelines for lagring av tokens sikkert (HTTPOnly cookies vs. AsyncStorage for mobil, osv.), og m\u00f8nstre for tilgangskontroll i koden (hvilke roles finnes, hvordan sjekkes de).</p>"},{"location":"guidelines/policies/security/#sikker-kodepraksis","title":"Sikker kodepraksis","text":"<p>List generelle beste praksiser som utviklere skal f\u00f8lge for \u00e5 unng\u00e5 s\u00e5rbarheter \u2013 f.eks. input-validering for \u00e5 hindre XSS/SQL injection (selv om mest frontend, kan fortsatt gjelde ved bruk av dangerouslySetInnerHTML i React, etc.), bruk av parameteriserte queries hvis appen kommuniserer med DB via backend, etc.</p>"},{"location":"guidelines/policies/security/#avhengighetssikkerhet","title":"Avhengighetssikkerhet","text":"<p>Oppfordre til jevnlig oppdatering av biblioteker for \u00e5 f\u00e5 inn sikkerhetsfikser. Nevn bruk av Dependabot eller tilsvarende for \u00e5 overv\u00e5ke avhengigheter.</p>"},{"location":"guidelines/policies/security/#tilgangsstyring-i-teamet","title":"Tilgangsstyring i teamet","text":"<p>Inkluder eventuelt regler for hvem som har tilgang til hva i utviklingsprosessen. For eksempel: \"Kun admin-utviklere har tilgang til produksjonsmilj\u00f8ets innstillinger. Alle PRs m\u00e5 godkjennes av minst \u00e9n annen for \u00e5 forhindre at ondsinnet kode sniker seg inn.\".</p> <p>Denne seksjonen kan deles i flere filer (f.eks. <code>security/secrets.md</code>, security/auth.md, security/code-guidelines.md) eller ett samlekapittel. Form\u00e5let er \u00e5 s\u00f8rge for at alle skriver kode og konfigurerer systemet med sikkerhet i mente, slik at man unng\u00e5r datalekkasjer eller uautoriserte tilganger i produksjon.</p>"},{"location":"guidelines/process/","title":"Prosesser","text":"<p>Denne seksjonen beskriver hvordan vi jobber i praksis i Kodeverket. Her finner du steg-for-steg-beskrivelser av v\u00e5re viktigste utviklingsprosesser \u2013 fra hvordan man starter et nytt prosjekt, til hvordan man tester og leverer kode i produksjon.</p> <p>M\u00e5let er \u00e5 sikre felles forst\u00e5else og forutsigbarhet, slik at alle jobber p\u00e5 en effektiv og strukturert m\u00e5te.</p>"},{"location":"guidelines/process/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Oppsett og strukturering av nye prosjekter</li> <li>Branching-strategi og bruk av Git</li> <li>CI/CD-workflows og deploy-rutiner</li> <li>Testing p\u00e5 ulike niv\u00e5er (unit, integrasjon, E2E)</li> <li>Samarbeid med design og UX</li> <li>Onboarding av nye utviklere</li> </ul> <p>Denne delen er spesielt nyttig for nye teammedlemmer, men ogs\u00e5 som oppslagsverk for etablerte utviklere.</p> <p>V\u00e5re prosesser er levende \u2013 bidra gjerne med forbedringer dersom noe kan gj\u00f8res tydeligere eller mer oppdatert.</p>"},{"location":"guidelines/process/branching/","title":"Versjonskontroll og branching-strategi","text":"<p>Beskriv teamets praksis for Git versjonskontroll og branching. Med 8 utviklere er det viktig med en enkel men effektiv workflow:</p>"},{"location":"guidelines/process/branching/#branching-modell","title":"Branching-modell","text":"<p>Angi om dere f\u00f8lger GitHub Flow, GitFlow eller Trunk-based development. Et lite team med hyppige leveranser vil ofte bruke en forenklet modell som GitHub Flow (feature branches fra main og PR inn til main for hver endring) eller trunk-based (sm\u00e5 korte feature-branches) for h\u00f8y utviklingshastighet\u200b. Hvis dere derimot trenger separate release-l\u00f8p, kan en variant av GitFlow benyttes. Dokumentet b\u00f8r forklare valget: \"Vi f\u00f8lger GitHub Flow med kontinuerlige leveranser, da dette gir raskere utvikling. main-branchen er alltid produksjonsklar.\"</p>"},{"location":"guidelines/process/branching/#navngivning-av-branches","title":"Navngivning av branches","text":"<p>Konvensjoner som at feature-branches prefix\u2019es med type (f.eks. feature/login-flow, bugfix/issue-123), eller bruker Jira-ticket-ID dersom integrert (f.eks. PROJ-45-login-screen).</p>"},{"location":"guidelines/process/branching/#pull-requests-og-merging","title":"Pull requests og merging","text":"<p>Beskriv krav for \u00e5 opprette PR (skal alle endringer g\u00e5 via PR, hvor mange approvals trengs, om squash merge brukes osv.). Oppfordre til hyppige, sm\u00e5 PRer for \u00e5 unng\u00e5 store integrasjonsproblemer.</p>"},{"location":"guidelines/process/branching/#commit-meldinger","title":"Commit-meldinger","text":"<p>Hvis dere bruker en standard (som Conventional Commits eller bare enkle regler), dokumenter det. F.eks. \"Commits b\u00f8r ha en kortfattet beskrivelse i imperativ form, f.eks. Add caching for product images. For st\u00f8rre endringer, legg til detaljer i beskrivelsen.\"</p>"},{"location":"guidelines/process/branching/#release-tagging","title":"Release tagging","text":"<p>Om dere tagger versjoner (f.eks. med semantisk versjonering) eller bruker GitHub Releases, beskriv prosedyren.</p>"},{"location":"guidelines/process/ci-cd/","title":"CI/CD oppsett","text":"<p>Beskriv oppsett og bruk av Continuous Integration/Continuous Deployment (CI/CD), ettersom teamet bruker GitHub Actions for automatisering. Dokumentasjonen kan dekke:</p>"},{"location":"guidelines/process/ci-cd/#bygg-og-test-pipeline","title":"Bygg og test pipeline","text":"<p>Hvilke actions som kj\u00f8res p\u00e5 push/PR. For eksempel: \"Alle pull requests trigges av en GitHub Actions workflow som kj\u00f8rer linting, bygger prosjektet og kj\u00f8rer alle tester.\" Inkluder filnavn (.github/workflows/ci.yml) og forklar struktur: jobber, steg (installer avhengigheter, kj\u00f8re npm run build, npm test osv).</p>"},{"location":"guidelines/process/ci-cd/#deploy-prosess","title":"Deploy-prosess","text":"<p>Forklar hvordan kode g\u00e5r til produksjon. F.eks.: \"N\u00e5r kode merges til main, kj\u00f8rer en deploy-workflow som bygger appen og deployer til Vercel for web og kj\u00f8rer EAS (Expo Application Services) for \u00e5 bygge mobilapp.\" Eller hvis dere bruker GitHub Pages for dokumentasjon (som denne dokumentasjonen selv), beskriv det.</p>"},{"location":"guidelines/process/ci-cd/#miljer-og-secrets","title":"Milj\u00f8er og secrets","text":"<p>Hvordan sensitiv info brukes i CI. F.eks.: \"Deployment-workflowen trekker inn API_KEY og SECRET fra GitHub Secrets for \u00e5 deploye.\" Dette overlapper med sikkerhetsseksjonen, men her kan teknisk bruk beskrives.</p>"},{"location":"guidelines/process/ci-cd/#status-og-varsler","title":"Status og varsler","text":"<p>Noter om CI-status vises i PR, og om teamet bruker f.eks. Slack-varsler ved feil build.</p> <p>Inkluder gjerne et konkret eksempel p\u00e5 workflow-konfigurasjon i dokumentet for tydelighet, men hovedsakelig b\u00f8r det forklare hva utviklere trenger \u00e5 vite (hvordan trigge re-run, hvordan legge til nye tester i pipeline, osv.). Filnavn som ci-cd.md under docs/process/ kan passe.</p>"},{"location":"guidelines/process/design-ux/","title":"Design og UI/UX-samarbeid","text":"<p>For \u00e5 sikre smidig samarbeid mellom utviklere og designere b\u00f8r det finnes dokumentasjon p\u00e5 design- og UX-prosessen i teamet:</p>"},{"location":"guidelines/process/design-ux/#designsystem-og-stilguider","title":"Designsystem og stilguider","text":"<p>Beskriv om dere har et designsystem (med komponenter, farger, typografi). Utviklere b\u00f8r vite hvor de finner designressurser (for eksempel en Figma-link til designbibliotek) og f\u00f8lge dem. Dokument\u00e9r ogs\u00e5 retningslinjer for bruk av dette: \"Vi har et eget komponentbibliotek; gjenbruk eksisterende komponenter fremfor \u00e5 lage nye varianter. Dersom en ny komponent er n\u00f8dvendig, koordin\u00e9r med designer for \u00e5 legge den inn i designsystemet.\"</p>"},{"location":"guidelines/process/design-ux/#arbeidsflyt-utviklerdesigner","title":"Arbeidsflyt utvikler\u2013designer","text":"<p>Forklar hvordan design overleveres og diskuteres. F.eks.: \"Designere lager skisser i Figma. F\u00f8r implementasjon g\u00e5r utvikler gjennom design i et m\u00f8te for \u00e5 avklare sp\u00f8rsm\u00e5l. Avvik fra design pga. tekniske begrensninger skal diskuteres med designer.\" Dette setter forventninger om kommunikasjon.</p>"},{"location":"guidelines/process/design-ux/#uiux-prinsipper","title":"UI/UX-prinsipper","text":"<p>Noter viktige UX-prinsipper utviklere skal ha i bakhodet under implementasjon, som konsistent navigasjon, responsive design (siden dere jobber med web og mobil), animasjoner/overganger som ikke forstyrrer brukeren, etc.</p>"},{"location":"guidelines/process/design-ux/#verkty-for-samarbeid","title":"Verkt\u00f8y for samarbeid","text":"<p>Hvis teamet bruker verkt\u00f8y som Storybook for \u00e5 bygge og dele UI-komponenter isolert, dokumenter dette og hvordan design feedback integreres. Eller hvis Notion/Confluence brukes til design specs, lenk til det.</p> <p>Kort sagt skal utviklerne ha en klar forst\u00e5else av hvordan de f\u00e5r tak i design og hvordan de forventes \u00e5 samarbeide. Dette kan skrives i design-collaboration.md. \u00c5 ha slike retningslinjer hindrer misforst\u00e5elser \u2013 f.eks. at en utvikler koder noe inkonsistent med design, eller at design ikke tar h\u00f8yde for tekniske utfordringer.</p>"},{"location":"guidelines/process/onboarding/","title":"Onboarding av nye utviklere","text":"<p>Lag en egen onboarding-guide for nyansatte utviklere. Dette er ofte det f\u00f8rste en ny utvikler leser, og b\u00f8r gi et steg-for-steg opplegg for \u00e5 komme i gang:</p>"},{"location":"guidelines/process/onboarding/#tilgang-og-verkty","title":"Tilgang og verkt\u00f8y","text":"<p>Beskriv hvordan nye utviklere f\u00e5r tilgang til GitHub-repositorier, Slack-kanaler, Jira/Notion (prosjektstyringsverkt\u00f8y), og eventuelle andre n\u00f8dvendige kontoer. Inkluder kontaktperson for tilgang om relevant.</p>"},{"location":"guidelines/process/onboarding/#utviklingsmilj-oppsett","title":"Utviklingsmilj\u00f8 oppsett","text":"<p>Steg for steg for \u00e5 sette opp maskinen sin. For eksempel: installer Node.js (angi versjon), Yarn/NPM, Expo CLI, Android Studio/Xcode for mobil, osv. Deretter: klone repo, kj\u00f8re npm install, kopiere .env.example til .env og fylle inn n\u00f8dvendige keys (som de m\u00e5 f\u00e5 fra en kollega eller vault). Denne delen kan hentes fra \"Prosjektopprettelse\" men spesifikt vinklet til en person som kommer ny inn.</p>"},{"location":"guidelines/process/onboarding/#lesing-av-dokumentasjon","title":"Lesing av dokumentasjon","text":"<p>Henvis den nyansatte til de \u00f8vrige dokumentene i repositoryet. F.eks.: \"Les gjennom kodestandarder og beste praksis f\u00f8rst, s\u00e5 domenebegreper for \u00e5 forst\u00e5 forretningen. Sett deg inn i branching-strategien f\u00f8r du lager din f\u00f8rste commit.\"</p>"},{"location":"guidelines/process/onboarding/#frste-oppgave","title":"F\u00f8rste oppgave","text":"<p>Ofte kan man inkludere en \u201cHello World\u201d-oppgave: f.eks. \"Start utviklerserveren for webappen (npm run dev) og last den i nettleser. Gj\u00f8r en liten endring (f.eks. legg til deg selv som bidragsyter i Om oss-siden) og opprett en pull request i henhold til rutinene.\" Dette lar den nye gjennomf\u00f8re hele syklusen (kode -&gt; commit -&gt; PR -&gt; merge) i liten skala.</p>"},{"location":"guidelines/process/onboarding/#mentor-og-mter","title":"Mentor og m\u00f8ter","text":"<p>Hvis teamet har en fadder/mentorordning, noter det i dokumentet. Ogs\u00e5 eventuelle onboarding-m\u00f8ter (f.eks. arkitekturgjennomgang med tech lead, intro til domene med produkteier) kan listes slik at nyansatt vet hva som kommer.</p> <p>Onboarding-guiden (f.eks. ONBOARDING.md) fungerer som en sjekkliste. Den b\u00f8r v\u00e6re skriftlig i docs-repo slik at den lett kan oppdateres n\u00e5r prosesser endrer seg, og nye ansatte alltid f\u00e5r oppdatert info. God onboarding-dokumentasjon reduserer ramp-up tid dramatisk\u200b og forhindrer at feil (pga. misforst\u00e5elser) skjer i startfasen.</p>"},{"location":"guidelines/process/project-setup/","title":"Prosjektopprettelse og -forvaltning","text":"<p>Ha en guide for prosjektopprettelse og forvaltning som beskriver hvordan man starter et nytt prosjekt eller modul i stacken, og hvordan man administrerer et prosjekt gjennom livssyklusen. Denne dokumentasjonen fungerer som en oppskrift for konsistente prosjekter. Innhold kan inkludere:</p>"},{"location":"guidelines/process/project-setup/#opprettelse-av-nytt-prosjekt","title":"Opprettelse av nytt prosjekt","text":"<p>Hvordan bruke boilerplate eller maler (f.eks. create-next-app for Next.js, eller Expo CLI for React Native) med teamets preferanser. Beskriv eventuelle interne verkt\u00f8y eller templates som skal benyttes for \u00e5 f\u00e5 riktig konfigurasjon (lint, testoppsett, etc.) fra start.</p>"},{"location":"guidelines/process/project-setup/#konfigurasjon-og-miljer","title":"Konfigurasjon og milj\u00f8er","text":"<p>Hvordan sette opp utviklingsmilj\u00f8et lokalt (Node-versjon, pakkeh\u00e5ndtering, milj\u00f8variabler). Hvis teamet har en standard for .env-filer eller config, dokument\u00e9r dette. Inkluder stegene for \u00e5 koble mot n\u00f8dvendige tjenester (f.eks. Sanity databasen, API-endepunkter) i et nytt prosjekt.</p>"},{"location":"guidelines/process/project-setup/#deploy-og-miljhandtering","title":"Deploy og milj\u00f8h\u00e5ndtering","text":"<p>Retningslinjer for opprettelse av staging- og produksjonsmilj\u00f8er, hvordan prosjektet deployeres via CI/CD (beskrevet i egen seksjon), og rutiner for vedlikehold. Forvaltning kan ogs\u00e5 inkludere hvordan man oppgraderer avhengigheter jevnlig, overv\u00e5ker ytelse, logger feil, osv.</p>"},{"location":"guidelines/process/project-setup/#prosjektmal-og-struktur","title":"Prosjektmal og struktur","text":"<p>Referer til avsnittet om prosjektstruktur \u2013 nye prosjekter b\u00f8r f\u00f8lge samme mappeoppsett, naming og modulinndeling for gjenkjennelighet.</p> <p>Denne guiden kan samles i en markdown-fil (f.eks. project-setup.md). Den s\u00f8rger for at alle starter nye prosjekter p\u00e5 samme m\u00e5te, noe som sparer tid og reduserer konfigurasjonsfeil.</p>"},{"location":"guidelines/process/testing/","title":"Testing strategi","text":"<p>Forklar teamets teststrategi og verkt\u00f8y for kvalitetssikring (enhet, integrasjon, E2E)</p>"},{"location":"guidelines/process/testing/#enhetstester","title":"Enhetstester","text":"<p>Beskriv at sm\u00e5 isolerte tester (f.eks. med Jest) skal dekke funksjoner og komponenter. Forklar konvensjoner for testfiler (f.eks. *.test.tsx i samme mappe som koden eller under en tests/ mappe).</p>"},{"location":"guidelines/process/testing/#integrasjonstester","title":"Integrasjonstester","text":"<p>Beskriv tester som kj\u00f8rer flere moduler sammen, f.eks. render av en React-komponent med tilh\u00f8rende context eller state, kanskje bruk av React Testing Library for \u00e5 simulere brukerinteraksjon uten et fullstendig ende-til-ende milj\u00f8.</p>"},{"location":"guidelines/process/testing/#end-to-end-tester-e2e","title":"End-to-end-tester (E2E)","text":"<p>Forklar hvordan dere tester hele brukerflyter. For web kan dette v\u00e6re med Cypress eller Playwright som automatiserer en nettleser. For mobil Expo/RN kan man bruke Detox eller End-to-end manuelt via testflight etc. Beskriv hvilke kritiske brukerhistorier som dekkes.</p>"},{"location":"guidelines/process/testing/#testdekning-og-prioritering","title":"Testdekning og prioritering","text":"<p>Understrek pyramideprinsippet: man b\u00f8r ha flest enhetstester, f\u00e6rre integrasjonstester, og et utvalg E2E for kritiske stier. Dette fordi enhetstester er enklest og raskest \u00e5 skrive, mens E2E er komplekse og tidskrevende \u2013 de brukes der de gir mest verdi.</p>"},{"location":"guidelines/process/testing/#testprinsipper","title":"Testprinsipper","text":"<p>Oppmuntre til TDD der det passer, eller i det minste at hver feature kommer med tilh\u00f8rende tester. Not\u00e9r om code coverage brukes aktivt (f.eks. minst X% dekning).</p>"},{"location":"guidelines/process/testing/#testdata-og-milj","title":"Testdata og milj\u00f8","text":"<p>Forklar om tester kj\u00f8res mot mock data, eller om det finnes et dedikert test-API eller test-database. For eksempel: \"Integrasjonstester bruker en lokal mock server for API (se mocks/-mappen) for \u00e5 unng\u00e5 \u00e5 treffe produksjonsdata.\"</p> <p>Dokumentasjonen kan deles i underfiler som testing/unit-testing.md, testing/e2e-testing.md, eller en samlet testing.md med underoverskrifter. Den skal gj\u00f8re det klart hvordan man kj\u00f8rer testene lokalt (npm test, npm run cypress etc.), og hvordan testene er integrert i CI. P\u00e5 den m\u00e5ten vet nye utviklere n\u00f8yaktig hvordan de skal verifisere at endringer ikke introduserer regresjoner.</p>"},{"location":"guidelines/standards/","title":"Kodestandarder","text":"<p>Denne delen av dokumentasjonen beskriver hvordan vi skriver og vurderer kode i Kodeverket. Hensikten er \u00e5 sikre konsistens, forutsigbarhet og h\u00f8y kvalitet p\u00e5 tvers av prosjekter og utviklere.</p> <p>Ved \u00e5 f\u00f8lge felles kodestandarder og prinsipper gj\u00f8r vi det enklere for alle i teamet \u00e5 lese, forst\u00e5 og bygge videre p\u00e5 hverandres arbeid.</p>"},{"location":"guidelines/standards/#hva-finner-du-her","title":"Hva finner du her?","text":""},{"location":"guidelines/standards/#code-style","title":"Code Style","text":"<p>Retningslinjer for hvordan vi skriver kode i praksis: - Navnekonvensjoner (filer, variabler, funksjoner, komponenter) - Struktur og organisering av filer - Bruk av spr\u00e5kspesifikke idiomer (for eksempel i TypeScript og React) - Bruk av verkt\u00f8y som Prettier og ESLint</p>"},{"location":"guidelines/standards/#beste-praksis","title":"Beste praksis","text":"<p>Et sett med anbefalinger og erfaringsbaserte r\u00e5d som gjelder for utvikling generelt og v\u00e5re teknologier spesielt: - Do's and don'ts - Typiske feil \u00e5 unng\u00e5 - Ytelse, sikkerhet og vedlikeholdbarhet</p>"},{"location":"guidelines/standards/#kodegjennomgang","title":"Kodegjennomgang","text":"<p>V\u00e5r prosess for code reviews: - Hva vi ser etter - Hvordan vi gir og mottar tilbakemeldinger - Hvilke krav som gjelder f\u00f8r kode merges</p>"},{"location":"guidelines/standards/#begrepsordliste","title":"Begrepsordliste","text":"<p>En oversikt over sentrale begreper i v\u00e5re domener og prosjekter. Dette fungerer som en referanse for felles spr\u00e5k og forst\u00e5else, inspirert av Domain-Driven Design.</p>"},{"location":"guidelines/standards/#hvem-er-dette-for","title":"Hvem er dette for?","text":"<ul> <li>Utviklere som skriver eller leser kode i Kodeverket</li> <li>Nye ansatte som skal l\u00e6re hvordan vi jobber</li> <li>Alle som deltar i eller vurderer pull requests</li> </ul>"},{"location":"guidelines/standards/#hvordan-bruke-denne-seksjonen","title":"Hvordan bruke denne seksjonen?","text":"<p>Les gjennom f\u00f8r du starter p\u00e5 et nytt prosjekt, skriver ny funksjonalitet eller gj\u00f8r en kodegjennomgang. Bruk det ogs\u00e5 som referanse underveis i arbeidet.</p> <p>Alle teammedlemmer er ansvarlige for \u00e5 etterleve og forbedre standardene over tid.</p>"},{"location":"guidelines/standards/best-practices/","title":"Kodeeksempler og beste praksis","text":"<p>Opprett en seksjon for kodeeksempler og beste praksis der dere samler m\u00f8nstre som teamet \u00f8nsker \u00e5 f\u00f8lge. Dette kan fungere som en cookbook eller snippets library. Innholdet kan v\u00e6re:</p>"},{"location":"guidelines/standards/best-practices/#eksempelkode","title":"Eksempelkode","text":"<p>Sm\u00e5 kodebiter som demonstrerer hvordan typiske oppgaver l\u00f8ses riktig i deres kodebase. For eksempel, en korrekt m\u00e5te \u00e5 hente data fra API i React (med feilh\u00e5ndtering og loading-state), eller et eksempel p\u00e5 strukturering av formh\u00e5ndtering i React Native.</p>"},{"location":"guidelines/standards/best-practices/#dos-and-donts","title":"Do's and Don'ts","text":"<p>Lister over anbefalte praksiser vs. ting man b\u00f8r unng\u00e5. For eksempel: Do: bruke React Hooks for state i funksjonskomponenter; Don't: manipulere DOM direkte i React (bruk state i stedet). Disse kan presenteres punktvis for klarhet.</p>"},{"location":"guidelines/standards/best-practices/#ytelses-og-kvalitetsrad","title":"Ytelses- og kvalitetsr\u00e5d","text":"<p>Beste praksis rundt optimalisering (f.eks. memoisering i React, unng\u00e5 un\u00f8dvendige re-renders), sikker kode (unng\u00e5 XSS ved \u00e5 sanitere input), osv.</p>"},{"location":"guidelines/standards/best-practices/#linker-til-eksterne-ressurser","title":"Linker til eksterne ressurser","text":"<p>Hvis dere f\u00f8lger visse offentlige guidelines (som React\u2019s egne best practices, TypeScript handbook for patterns, etc.), kan dere lenke til disse for videre lesning.</p> <p>Kodeeksemplene kan ligge under en mappe docs/best-practices/ eller lignende, med separate filer for ulike tema (f.eks. state-management.md, performance.md). Husk \u00e5 holde eksempel-koden oppdatert n\u00e5r rammeverk eller verkt\u00f8y oppdateres.</p>"},{"location":"guidelines/standards/code-review/","title":"Kodegjennomgang retningslinjer","text":"<p>Dokument\u00e9r prosessen for kodegjennomgang (code review), slik at alle vet hvordan endringer blir evaluert f\u00f8r de merges</p>"},{"location":"guidelines/standards/code-review/#formal-med-code-review","title":"Form\u00e5l med code review","text":"<p>Klargj\u00f8r at hensikten er kvalitetssikring og kunnskapsdeling, ikke kritikk av personen. Code review skal sikre at endringer forbedrer kodebasens helse over tid\u200b google.github.io, ved \u00e5 fange opp potensielle feil, opprettholde standarder og spre forst\u00e5else av koden i teamet.</p>"},{"location":"guidelines/standards/code-review/#prosedyre","title":"Prosedyre","text":"<p>Beskriv hvordan code reviews foreg\u00e5r i praksis. F.eks.: \"Alle PR-er m\u00e5 gjennomg\u00e5s av minst \u00e9n kollega (helst to). Bruk GitHubs review-funksjon til kommentarer. Godkjenn PR (\u201cApprove\u201d) n\u00e5r den er klar, eller be om endringer (\u201cRequest changes\u201d) hvis noe m\u00e5 fikses.\" Nevn forventet responstid (f.eks. pr\u00f8v \u00e5 se gjennom en PR innen en arbeidsdag).</p>"},{"location":"guidelines/standards/code-review/#hva-man-ser-etter","title":"Hva man ser etter","text":"<p>Lag en sjekkliste for kodereviewere: Overholdes kodestandarder? Er det tester for ny funksjonalitet? Kan koden forenkles eller forbedres (uten at man krever perfeksjon)? Sikkerhetshull eller feil? Performance-problemer? Dokumenter disse punktene slik at b\u00e5de forfatter og reviewer vet fokusomr\u00e5dene. (Man kan trekke inn elementer fra f.eks. Googles \"Hva se etter i code review\").</p>"},{"location":"guidelines/standards/code-review/#ton-og-kultur","title":"Ton og kultur","text":"<p>Presiser at tilbakemeldinger skal v\u00e6re konstruktive og konkrete. Gjerne p\u00e5minn om \u00e5 bruke \u201cNit: \u2026\u201d for sm\u00e5pirk som ikke er kritisk\u200b google.github.io , og \u00e5 gi ros n\u00e5r noe er bra. M\u00e5let er en trygg kodegjennomgangskultur der folk t\u00f8r \u00e5 f\u00e5 koden sin vurdert.</p>"},{"location":"guidelines/standards/code-review/#automatisering","title":"Automatisering","text":"<p>Nevn om noe av reviewprosessen er automatisert: \"ESLint og testene kj\u00f8rer automatisk p\u00e5 PR, s\u00e5 reviewer trenger i utgangspunktet kun fokusere p\u00e5 logikk og struktur.\" Ogs\u00e5 kan man referere til Code Owners fil hvis dere bruker det for \u00e5 auto-requeste riktige reviewers.</p> <p>En code review-guide kan ligge som code-review.md. Denne hjelper nye utviklere \u00e5 vite hvordan de f\u00e5r koden sin integrert, og minner erfarne om beste praksis i review. Over tid er godt gjennomf\u00f8rte code reviews med p\u00e5 \u00e5 heve kodekvaliteten kontinuerlig.</p>"},{"location":"guidelines/standards/code-standards/","title":"Kodestandarder","text":"<p>Dokument\u00e9r klare kodestandarder som alle utviklere skal f\u00f8lge. Dette inkluderer regler for kodeformatering, navngivingskonvensjoner, filstruktur og bruk av spr\u00e5kspesifikke idiomer. M\u00e5let er \u00e5 sikre konsistens, lesbarhet og vedlikeholdbarhet i kodebasen. For TypeScript/React-prosjekter kan kodestandardene beskrive for eksempel:</p>"},{"location":"guidelines/standards/code-standards/#bruk-av-prettier-og-eslint-regler","title":"Bruk av Prettier og ESLint-regler","text":"<p>(f.eks. Airbnb Style Guide) for \u00e5 automatisk formatere kode og fange opp feil.</p>"},{"location":"guidelines/standards/code-standards/#navngivning","title":"Navngivning","text":"<p>at variabler, funksjoner og komponenter bruker beskrivende engelske navn i camelCase/PascalCase etter konvensjon.</p>"},{"location":"guidelines/standards/code-standards/#struktur-pa-react-komponenter","title":"Struktur p\u00e5 React-komponenter","text":"<p>(funksjonelle komponenter med hooks framfor klassekomponenter, osv).</p>"},{"location":"guidelines/standards/code-standards/#kommentarer-og-dokumentasjonskommentarer","title":"Kommentarer og dokumentasjonskommentarer","text":"<p>(JSDoc/TSDoc) der det er n\u00f8dvendig for \u00e5 forklare kompleks logikk.</p> <p>Inkluder gjerne eksempler p\u00e5 riktig og gal kode for \u00e5 illustrere standardene. Standardene b\u00f8r h\u00e5ndheves b\u00e5de gjennom dokumentasjonen og verkt\u00f8y (linting/formattering) integrert i utviklingsprosessen. Kode skal alltid skrives p\u00e5 engelsk, inkludert navngivning og kommentarer, for \u00e5 gj\u00f8re den universelt forst\u00e5elig i teamet og p\u00e5 tvers av verkt\u00f8y. En fil som CODE-STANDARDS.md kan ligge under f.eks. docs/standards/ i repositoryet.</p>"},{"location":"guidelines/standards/glossary/","title":"Domenespr\u00e5k og begreper","text":"<p>Etabler en ordliste over domenespr\u00e5k og begreper som er sentrale for prosjektet. I Domain-Driven Design oppfordres det til et felles \u201cubiquitous language\u201d \u2013 et delt spr\u00e5k mellom utviklere og domeneksperter. Dokumentasjonen b\u00f8r inneholde en begrepskatalog eller ordliste der viktige termer, akronymer og konsept fra domenet forklares. Dette hjelper nye utviklere \u00e5 forst\u00e5 forretningslogikken og sikrer at alle bruker terminologi konsistent. En vanlig tiln\u00e6rming er \u00e5 lage et wiki- eller ordbok-format der hvert domeneord har sin egen oppf\u00f8ring med definisjon\u200b</p> <p>For eksempel, dersom domenet er en nettbutikk kunne ordlisten forklare begreper som \u201cprodukt\u201d, \u201cordre\u201d, \u201clagerstatus\u201d osv. Beskriv hva de betyr i akkurat dette systemet. En slik ordliste b\u00f8r v\u00e6re lett s\u00f8kbar og kryssreferanser mellom begrep kan legges inn (f.eks. lenke \u201cordre\u201d til \u201cfaktura\u201d hvis relatert). Innholdet kan plasseres i docs/domain/ (f.eks. glossary.md). En oppdatert domeneordliste fremmer delt forst\u00e5else og redusert misforst\u00e5else i utviklingsteamet.</p>"},{"location":"guidelines/tools/","title":"Verkt\u00f8y og team","text":"<p>Denne seksjonen handler om verkt\u00f8yene vi bruker i utviklingsarbeidet, og hvordan vi samarbeider i teamet.</p> <p>Du finner her beskrivelser av hvordan man setter opp utviklingsmilj\u00f8et sitt, hvilke verkt\u00f8y vi bruker til testing og distribusjon, og hvordan vi kommuniserer og koordinerer arbeidet v\u00e5rt.</p>"},{"location":"guidelines/tools/#hva-du-finner-her","title":"Hva du finner her","text":"<ul> <li>Oversikt over lokale utviklingsverkt\u00f8y og CLI-er</li> <li>Bruk av testmilj\u00f8er og mocking av data</li> <li>Anbefalt VS Code-oppsett og devtools</li> <li>Samarbeidsverkt\u00f8y som Slack, Jira og Notion</li> <li>Retningslinjer for effektiv teamkommunikasjon</li> </ul> <p>M\u00e5let er \u00e5 gj\u00f8re det enkelt \u00e5 komme i gang, og \u00e5 sikre god flyt i det daglige samarbeidet.</p> <p>Godt samarbeid og riktige verkt\u00f8y skaper mer verdi med mindre friksjon \u2013 bidra gjerne med erfaringer og tips!</p>"},{"location":"guidelines/tools/communication/","title":"Kommunikasjon og samarbeid","text":"<p>Beskriv hvordan teamet bruker kommunikasjons- og samarbeidsverkt\u00f8y som Slack, Jira, Notion osv., slik at det er klart hvor man henvender seg og hvordan informasjon flyter</p>"},{"location":"guidelines/tools/communication/#slack-chat","title":"Slack (chat)","text":"<p>Noter hvilke Slack-kanaler som er relevante (f.eks. #team-utvikling for tekniske diskusjoner, #alerts for automatiske systemvarsler, #design-feedback mellom dev og design, etc.). Angi \u00f8nsket bruksm\u00e5te: \"Still sp\u00f8rsm\u00e5l i \u00e5pne kanaler fremfor DM, s\u00e5 kunnskap deles \u00e5pent.\" og \"Bruk @herding med omhu, f.eks. @channel kun ved kritiske driftsmeldinger.\".</p>"},{"location":"guidelines/tools/communication/#jira-oppgavehandtering","title":"Jira (oppgaveh\u00e5ndtering)","text":"<p>Forklar arbeidsprosess i Jira hvis det brukes. F.eks.: \"Vi kj\u00f8rer to-ukers sprinter i Jira. Hver oppgave/ticket skal flyttes til In Progress n\u00e5r du begynner, og til Code Review n\u00e5r PR er opprettet. Husk \u00e5 nevne ticket-ID i PR-beskrivelsen.\" Dokument\u00e9r eventuelle workflows, definisjon av ferdig (DoD) kriterier, og sammenhengen mellom Jira og GitHub (lenke PR til Jira-issue).</p>"},{"location":"guidelines/tools/communication/#notionconfluence-dokumentasjon","title":"Notion/Confluence (dokumentasjon)","text":"<p>Hvis noe dokumentasjon eller prosjektplanlegging ligger utenfor GitHub-repo (f.eks. produktroadmap, spesifikasjoner, m\u00f8tereferater), pek utviklerne dit. F.eks.: \"Funksjonsspesifikasjoner skrives av produktleder i Notion \u2013 se workspace Team X. Tekniske beslutninger dokumenteres i dette GitHub repoet.\" Klargj\u00f8r hvilke typer informasjon man finner hvor, s\u00e5 man unng\u00e5r duplisering.</p>"},{"location":"guidelines/tools/communication/#mter-og-seremonier","title":"M\u00f8ter og seremonier","text":"<p>Oppgi om teamet har faste m\u00f8ter som daily standup (og om den kj\u00f8res p\u00e5 Slack eller fysisk), retrospektiver, planleggingsm\u00f8ter etc., og hvor agenda/notes for disse holdes. Dette kan kombineres med samarbeidsverkt\u00f8y (f.eks. retrospektiv i Notion).</p> <p>Selv om dette kan virke opplagt for eksisterende medlemmer, er det gull verdt for nykommere \u00e5 ha det svart p\u00e5 hvitt. En fil COMMUNICATION.md kunne samle denne informasjonen. Den bidrar til en \u00e5pen og koordinert teamkultur ved at alle vet hvor de skal kommunisere om hva.</p>"},{"location":"guidelines/tools/dev-environment/","title":"Lokal CLI og testmilj\u00f8 bruk","text":"<p>Her dokumenteres bruken av diverse interne verkt\u00f8y og milj\u00f8er som utviklerne benytter i hverdagen</p>"},{"location":"guidelines/tools/dev-environment/#cli-verkty-og-skript","title":"CLI-verkt\u00f8y og skript","text":"<p>Beskriv eventuelle kommandolinjeprogrammer som teamet har laget eller ofte bruker. For eksempel, hvis det finnes et egenutviklet CLI for \u00e5 generere moduloppsett (f.eks. et script som oppretter en ny komponent med boilerplate-kode), forklar hvordan det installeres og kj\u00f8res. Eller ganske enkelt: bruk av Expo CLI (expo start, expo eject), Next.js CLI (next dev, next build), eller NPX-skript. Dokument\u00e9r de vanligste skriptene i package.json (som npm run lint, npm run test:watch).</p>"},{"location":"guidelines/tools/dev-environment/#lokale-testmiljer","title":"Lokale testmilj\u00f8er","text":"<p>Forklar hvordan man kj\u00f8rer applikasjonene lokalt og bruker testmilj\u00f8er. F.eks.: \"Web: kj\u00f8r npm run dev i /web-mappen for \u00e5 starte Next.js dev-server p\u00e5 localhost. Mobil: kj\u00f8r expo start i /app-mappen og bruk Expo Go p\u00e5 telefon eller emulator. Sanity: kj\u00f8r npm run sanity for \u00e5 starte Sanity Studio lokalt for innhold.\" Hvis det finnes en delt testserver eller staging-backend som utvikling skal peke mot, beskriv konfigurasjon for det (f.eks. egen .env.staging).</p>"},{"location":"guidelines/tools/dev-environment/#debugging-og-devtools","title":"Debugging og devtools","text":"<p>Gi tips om eventuelle utviklerverkt\u00f8y som brukes. For eksempel: \"Installer React Developer Tools i Chrome for \u00e5 debugge React/React Native components.\" For React Native kan man nevne Flipper (debugger) eller VS Code debugger-tilkobling. Hvis spesielle devtools er satt opp (som Redux DevTools integrasjon), forklar hvordan de brukes.</p>"},{"location":"guidelines/tools/dev-environment/#andre-interne-systemer","title":"Andre interne systemer","text":"<p>Om teamet har en delt database dump for test, eller en mock-server verkt\u00f8y, dokumenter bruken. F.eks.: \"Bruk npm run seed for \u00e5 fylle databasen med testdata gjennom v\u00e5rt seedskript.\"</p> <p>Denne delen av dokumentasjonen sikrer at alle utviklere vet hvordan de praktisk utf\u00f8rer vanlige oppgaver. Den kan plasseres i docs/tools.md eller splittes (f.eks. tools/cli.md, tools/environments.md). S\u00f8rg for \u00e5 oppdatere den n\u00e5r nye scripts legges til eller gamle ikke brukes lenger.</p>"}]}